/// Versioning (0x10000)
pub const OTX_VERSIONING_META_OPEN_TX_VERSION: u32 = 0x10000;

/// Identifying (0x10010)
pub const OTX_IDENTIFYING_META_TX_HASH: u32 = 0x10010;
pub const OTX_IDENTIFYING_META_TX_WITNESS_HASH: u32 = 0x10011;

/// Rejecting (0x10020)
pub const OTX_REJECTING_META_REASON: u32 = 0x10020;

/// Concatenating (0x10030)
pub const OTX_CONCATENATING_META_COUNTER: u32 = 0x10030;
pub const OTX_CONCATENATING_META_PINNED_INPUTS: u32 = 0x10031;
pub const OTX_CONCATENATING_META_PINNED_OUTPUTS: u32 = 0x10032;
pub const OTX_CONCATENATING_META_CELL_DEP_STRATEGY: u32 = 0x10033;
pub const OTX_CONCATENATING_META_HEADER_DEP_STRATEGY: u32 = 0x10034;
pub const OTX_CONCATENATING_META_WITNESS_STRATEGY: u32 = 0x10035;

/// Accounting (0x10040)
pub const OTX_ACCOUNTING_META_INPUT_CKB: u32 = 0x10040;
pub const OTX_ACCOUNTING_META_OUTPUT_CKB: u32 = 0x10041;
pub const OTX_ACCOUNTING_META_MIN_FEE: u32 = 0x10042;
pub const OTX_ACCOUNTING_META_MAX_FEE: u32 = 0x10043;
pub const OTX_ACCOUNTING_META_INPUT_XUDT: u32 = 0x10044;
pub const OTX_ACCOUNTING_META_OUTPUT_XUDT: u32 = 0x10045;
pub const OTX_ACCOUNTING_META_INPUT_SUDT: u32 = 0x10046;
pub const OTX_ACCOUNTING_META_OUTPUT_SUDT: u32 = 0x10047;
pub const OTX_ACCOUNTING_OUTPUT_RECIPIENT: u32 = 0x10048;

/// Locating (0x10050)
pub const OTX_LOCATING_INPUT_CAPACITY: u32 = 0x10050;
pub const OTX_LOCATING_INPUT_LOCK_CODE_HASH: u32 = 0x10051;
pub const OTX_LOCATING_INPUT_LOCK_HASH_TYPE: u32 = 0x10052;
pub const OTX_LOCATING_INPUT_LOCK_ARGS: u32 = 0x10053;
pub const OTX_LOCATING_INPUT_TYPE_CODE_HASH: u32 = 0x10054;
pub const OTX_LOCATING_INPUT_TYPE_HASH_TYPE: u32 = 0x10055;
pub const OTX_LOCATING_INPUT_TYPE_ARGS: u32 = 0x10056;
pub const OTX_LOCATING_INPUT_TYPE_SCRIPT_HASH: u32 = 0x10057;
pub const OTX_LOCATING_INPUT_DATA_HASH: u32 = 0x10058;
